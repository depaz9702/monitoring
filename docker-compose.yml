version: '3.1'

volumes:
    prometheus_data: {}
    prometheus_config: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus/
      - ./prometheus/data:/prometheus/

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention=1h'
    ports:
      - 9090:9090
    networks:
      - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  cadvisor:
    image: google/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/datagrafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
#    env_file:
      #- ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

  influxdb:
    image: influxdb
    container_name: influxdb
    depends_on:
      - prometheus
    ports:
      - "8086:8086"
    env_file:
      - 'env.influxdb'
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - ./influxdb/data:/var/lib/influxdb
    networks:
      - back-tier
      - front-tier
    restart: always

